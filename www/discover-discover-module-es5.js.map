{"version":3,"sources":["webpack:///src/app/places/discover/discover.page.html","webpack:///src/app/places/discover/discover.module.ts","webpack:///src/app/places/discover/discover.page.scss","webpack:///src/app/places/discover/discover.page.ts","webpack:///src/app/places/place.model.ts","webpack:///src/app/places/places.service.ts"],"names":["routes","path","component","DiscoverPageModule","imports","forChild","declarations","DiscoverPage","placesService","menuCtrl","authService","isLoading","filter","items","Array","from","document","querySelector","children","userSub","user","subscribe","displayName","email","console","log","placesSub","places","loadedPlaces","relevantPlaces","listedLoadedPlaces","slice","place","userId","id","event","query","target","value","toLowerCase","requestAnimationFrame","forEach","item","shouldShow","textContent","indexOf","display","fetchPlaces","toggle","detail","unsubscribe","selector","template","Place","title","description","price","availableFrom","availableTo","location","imageDataUrl","PlacesService","http","_places","pipe","get","firebaseUrl","resData","key","hasOwnProperty","push","Date","next","res","checkUserIsAdmin","userIsAdmin","placeData","dateFrom","dateTo","imageDataURL","generatedId","newPlace","Error","Math","random","toString","post","name","concat","placeId","updatedPlaces","length","updatedPlaceIndex","findIndex","pl","put","asObservable","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAgBaC,kBAAkB;AAAA;AAAA,O;;AAAlBA,wBAAkB,6DAT9B,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,6DAAaC,QAAb,CAAsBL,MAAtB,CAJO,CADD;AAORM,oBAAY,EAAE,CAAC,2DAAD;AAPN,OAAT,CAS8B,GAAlBH,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACzBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCeFI,YAAY;AAWvB,8BACUC,aADV,EAEUC,QAFV,EAGUC,WAHV,EAGkC;AAAA;;AAFxB,eAAAF,aAAA,GAAAA,aAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AAVV,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAC,MAAA,GAAiB,KAAjB;AAGA,eAAAC,KAAA,GAAQC,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCC,QAA9C,CAAR;AAOI;;AAfmB;AAAA;AAAA,qCAiBZ;AAAA;;AACT,iBAAKC,OAAL,GAAa,KAAKT,WAAL,CAAiBU,IAAjB,CAAsBC,SAAtB,CAAgC,UAAAD,IAAI,EAAI;AACnD,kBAAGA,IAAH,EAAQ;AACN,qBAAI,CAACE,WAAL,GAAiBF,IAAI,CAACE,WAAtB;AACA,qBAAI,CAACC,KAAL,GAAWH,IAAI,CAACG,KAAhB;AACAC,uBAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,qBAAI,CAACM,SAAL,GAAiB,KAAI,CAAClB,aAAL,CAAmBmB,MAAnB,CAA0BN,SAA1B,CAAoC,UAAAM,MAAM,EAAI;AAC7D,uBAAI,CAACC,YAAL,GAAoBD,MAApB;;AACA,sBAAI,KAAI,CAACf,MAAL,KAAgB,KAApB,EAA2B;AACzB,yBAAI,CAACiB,cAAL,GAAsB,KAAI,CAACD,YAA3B;AACA,yBAAI,CAACE,kBAAL,GAA0B,KAAI,CAACD,cAAL,CAAoBE,KAApB,CAA0B,CAA1B,CAA1B;AACD,mBAHD,MAGO;AACL,yBAAI,CAACF,cAAL,GAAsB,KAAI,CAACD,YAAL,CAAkBhB,MAAlB,CACpB,UAAAoB,KAAK;AAAA,6BAAIA,KAAK,CAACC,MAAN,KAAiBb,IAAI,CAACc,EAA1B;AAAA,qBADe,CAAtB;AAGA,yBAAI,CAACJ,kBAAL,GAA0B,KAAI,CAACD,cAAL,CAAoBE,KAApB,CAA0B,CAA1B,CAA1B;AACD;;AACDP,yBAAO,CAACC,GAAR,CAAY,KAAI,CAACK,kBAAjB;AACD,iBAZgB,CAAjB;AAaD;AACF,aAnBY,CAAb;AAqBD;AAvCsB;AAAA;AAAA,sCAwCVK,KAxCU,EAwCH;AAAA;;AAClB,gBAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,WAAnB,EAAd;AACAC,iCAAqB,CAAC,YAAM;AAC1B,oBAAI,CAAC3B,KAAL,CAAW4B,OAAX,CAAmB,UAAAC,IAAI,EAAI;AACzB,oBAAMC,UAAU,GAAGD,IAAI,CAACE,WAAL,CAAiBL,WAAjB,GAA+BM,OAA/B,CAAuCT,KAAvC,IAAgD,CAAC,CAApE;AACAM,oBAAI,CAAC,OAAD,CAAJ,CAAcI,OAAd,GAAwBH,UAAU,GAAG,OAAH,GAAa,MAA/C;AACD,eAHD;AAID,aALoB,CAArB;AAMD;AAhDsB;AAAA;AAAA,6CAiDJ;AAAA;;AACjB,iBAAKhC,SAAL,GAAiB,IAAjB;AACA,iBAAKH,aAAL,CAAmBuC,WAAnB,GAAiC1B,SAAjC,CAA2C,YAAM;AAC/C,oBAAI,CAACV,SAAL,GAAiB,KAAjB;AACD,aAFD;AAGD;AAtDsB;AAAA;AAAA,uCAwDV;AACX,iBAAKF,QAAL,CAAcuC,MAAd;AACD;AA1DsB;AAAA;AAAA,yCA4DRb,KA5DQ,EA4DsC;AAAA;;AAC3D,iBAAKzB,WAAL,CAAiBuB,MAAjB,CAAwBZ,SAAxB,CAAkC,UAAAY,MAAM,EAAI;AAC5C,oBAAI,CAACrB,MAAL,GAAcuB,KAAK,CAACc,MAAN,CAAaX,KAA3B;;AACA,kBAAI,MAAI,CAAC1B,MAAL,KAAgB,KAApB,EAA2B;AACzB,sBAAI,CAACiB,cAAL,GAAsB,MAAI,CAACD,YAA3B;AACA,sBAAI,CAACE,kBAAL,GAA0B,MAAI,CAACD,cAAL,CAAoBE,KAApB,CAA0B,CAA1B,CAA1B;AACD,eAHD,MAGO;AACL,sBAAI,CAACF,cAAL,GAAsB,MAAI,CAACD,YAAL,CAAkBhB,MAAlB,CACpB,UAAAoB,KAAK;AAAA,yBAAIA,KAAK,CAACC,MAAN,KAAiBA,MAArB;AAAA,iBADe,CAAtB;AAGA,sBAAI,CAACH,kBAAL,GAA0B,MAAI,CAACD,cAAL,CAAoBE,KAApB,CAA0B,CAA1B,CAA1B;AACD;AACA,aAXD;AAYD;AAzEsB;AAAA;AAAA,wCA2ET;AACZ,gBAAG,KAAKZ,OAAR,EAAgB;AACd,mBAAKA,OAAL,CAAa+B,WAAb;AACD;;AACD,gBAAI,KAAKxB,SAAT,EAAoB;AAClB,mBAAKA,SAAL,CAAewB,WAAf;AACD;AACF;AAlFsB;;AAAA;AAAA,S;;;;gBAVhB;;gBAJA;;gBAMA;;;;AAQI3C,kBAAY,6DALxB,gEAAU;AACT4C,gBAAQ,EAAE,cADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,yGAFS;;;;AAAA,OAAV,CAKwB,GAAZ7C,YAAY,CAAZ;;;;;;;;;;;;;;;;ACbb;AAAA;;;AAAA;AAAA;AAAA;;UAAa8C,K,GACX,eACSnB,EADT,EAESoB,KAFT,EAGSC,WAHT,EAISC,KAJT,EAKSC,aALT,EAMSC,WANT,EAOSzB,MAPT,EAQS0B,QART,EASSC,YATT,EAS6B;AAAA;;AARpB,aAAA1B,EAAA,GAAAA,EAAA;AACA,aAAAoB,KAAA,GAAAA,KAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAzB,MAAA,GAAAA,MAAA;AACA,aAAA0B,QAAA,GAAAA,QAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AACL,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYOC,aAAa;AAOxB,+BAAoBnD,WAApB,EAAsDoD,IAAtD,EAAwE;AAAA;;AAApD,eAAApD,WAAA,GAAAA,WAAA;AAAkC,eAAAoD,IAAA,GAAAA,IAAA;AAN9C,eAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA6B,EAA7B,CAAV;AAMkE;;AAPlD;AAAA;AAAA,wCASV;AAAA;;AACZ,mBAAO,KAAKrD,WAAL,CAAiBuB,MAAjB,CAAwB+B,IAAxB,CAA6B,iEAAU,UAAA/B,MAAM,EAAE;AACpD,qBAAO,MAAI,CAAC6B,IAAL,CACJG,GADI,WAEA,yEAAYC,WAFZ,mBAIJF,IAJI,CAKH,2DAAI,UAAAG,OAAO,EAAI;AACb,oBAAMxC,MAAM,GAAG,EAAf;;AACA,qBAAK,IAAMyC,GAAX,IAAkBD,OAAlB,EAA2B;AACzB,sBAAIA,OAAO,CAACE,cAAR,CAAuBD,GAAvB,CAAJ,EAAiC;AAC/BzC,0BAAM,CAAC2C,IAAP,CACE,IAAI,kDAAJ,CACEF,GADF,EAEED,OAAO,CAACC,GAAD,CAAP,CAAad,KAFf,EAGEa,OAAO,CAACC,GAAD,CAAP,CAAab,WAHf,EAIEY,OAAO,CAACC,GAAD,CAAP,CAAaZ,KAJf,EAKE,IAAIe,IAAJ,CAASJ,OAAO,CAACC,GAAD,CAAP,CAAaX,aAAtB,CALF,EAME,IAAIc,IAAJ,CAASJ,OAAO,CAACC,GAAD,CAAP,CAAaV,WAAtB,CANF,EAOES,OAAO,CAACC,GAAD,CAAP,CAAanC,MAPf,EAQEkC,OAAO,CAACC,GAAD,CAAP,CAAaT,QARf,EASEQ,OAAO,CAACC,GAAD,CAAP,CAAaR,YATf,CADF;AAaD;AACF;;AACD,uBAAOjC,MAAP;AACD,eApBD,CALG,EA0BH,2DAAI,UAAAA,MAAM,EAAI;AACZ,sBAAI,CAACoC,OAAL,CAAaS,IAAb,CAAkB7C,MAAlB;AACD,eAFD,CA1BG,CAAP;AA8BD,aA/BmC,CAA7B,CAAP;AAgCD;AA1CuB;AAAA;AAAA,wCA4CV;AAAA;;AACZ,gBAAIwC,OAAJ;AACA,mBAAO,KAAKzD,WAAL,CAAiBU,IAAjB,CAAsB4C,IAAtB,CAA2B,iEAAU,UAAA5C,IAAI,EAAE;AAChD,qBAAO,MAAI,CAAC0C,IAAL,CACJG,GADI,WAEA,yEAAYC,WAFZ,mBAIJF,IAJI,CAKH,iEAAU,UAAAS,GAAG,EAAE;AACbN,uBAAO,GAACM,GAAR;AACA,uBAAO,MAAI,CAAC/D,WAAL,CAAiBgE,gBAAjB,EAAP;AACD,eAHD,CALG,EASH,2DAAI,UAAAC,WAAW,EAAI;AACjB,oBAAMhD,MAAM,GAAG,EAAf;;AACA,qBAAK,IAAMyC,GAAX,IAAkBD,OAAlB,EAA2B;AACzB,sBAAIA,OAAO,CAACE,cAAR,CAAuBD,GAAvB,MAAgCD,OAAO,CAACC,GAAD,CAAP,CAAanC,MAAb,IAAqBb,IAAI,CAACc,EAA1B,IAAgCyC,WAAW,IAAE,IAA7E,CAAJ,EAAwF;AACtFhD,0BAAM,CAAC2C,IAAP,CACE,IAAI,kDAAJ,CACEF,GADF,EAEED,OAAO,CAACC,GAAD,CAAP,CAAad,KAFf,EAGEa,OAAO,CAACC,GAAD,CAAP,CAAab,WAHf,EAIEY,OAAO,CAACC,GAAD,CAAP,CAAaZ,KAJf,EAKE,IAAIe,IAAJ,CAASJ,OAAO,CAACC,GAAD,CAAP,CAAaX,aAAtB,CALF,EAME,IAAIc,IAAJ,CAASJ,OAAO,CAACC,GAAD,CAAP,CAAaV,WAAtB,CANF,EAOES,OAAO,CAACC,GAAD,CAAP,CAAanC,MAPf,EAQEkC,OAAO,CAACC,GAAD,CAAP,CAAaT,QARf,EASEQ,OAAO,CAACC,GAAD,CAAP,CAAaR,YATf,CADF;AAaD;AACF;;AACD,uBAAOjC,MAAP;AACD,eApBD,CATG,EA8BH,2DAAI,UAAAA,MAAM,EAAI;AACZ,sBAAI,CAACoC,OAAL,CAAaS,IAAb,CAAkB7C,MAAlB;AACD,eAFD,CA9BG,CAAP;AAkCD,aAnCiC,CAA3B,CAAP;AAoCD;AAlFuB;AAAA;AAAA,mCAoFfO,EApFe,EAoFH;AACnB,mBAAO,KAAK4B,IAAL,CACJG,GADI,WAEA,yEAAYC,WAFZ,qBAEkChC,EAFlC,YAIJ8B,IAJI,CAKH,2DAAI,UAAAY,SAAS,EAAI;AACf,qBAAO,IAAI,kDAAJ,CACL1C,EADK,EAEL0C,SAAS,CAACtB,KAFL,EAGLsB,SAAS,CAACrB,WAHL,EAILqB,SAAS,CAACpB,KAJL,EAKL,IAAIe,IAAJ,CAASK,SAAS,CAACnB,aAAnB,CALK,EAML,IAAIc,IAAJ,CAASK,SAAS,CAAClB,WAAnB,CANK,EAOLkB,SAAS,CAAC3C,MAPL,EAQL2C,SAAS,CAACjB,QARL,EASLiB,SAAS,CAAChB,YATL,CAAP;AAWD,aAZD,CALG,CAAP;AAmBD;AAxGuB;AAAA;AAAA,mCA2GtBN,KA3GsB,EA4GtBC,WA5GsB,EA6GtBC,KA7GsB,EA8GtBqB,QA9GsB,EA+GtBC,MA/GsB,EAgHtBnB,QAhHsB,EAiHtBoB,YAjHsB,EAiHF;AAAA;;AAEpB,gBAAIC,WAAJ;AACA,gBAAIC,QAAJ;AACA,mBAAO,KAAKvE,WAAL,CAAiBuB,MAAjB,CAAwB+B,IAAxB,CACL,4DAAK,CAAL,CADK,EAEL,iEAAU,UAAA/B,MAAM,EAAI;AAClB,kBAAI,CAACA,MAAL,EAAa;AACX,sBAAM,IAAIiD,KAAJ,CAAU,gBAAV,CAAN;AACD;;AACDD,sBAAQ,GAAG,IAAI,kDAAJ,CACTE,IAAI,CAACC,MAAL,GAAcC,QAAd,EADS,EAET/B,KAFS,EAGTC,WAHS,EAITC,KAJS,EAKTqB,QALS,EAMTC,MANS,EAOT7C,MAPS,EAQT0B,QARS,EASToB,YATS,CAAX;AAWA,qBAAO,MAAI,CAACjB,IAAL,CAAUwB,IAAV,WACF,yEAAYpB,WADV,mBACmC,gCAEnCe,QAFmC,GAE3B;AACX/C,kBAAE,EAAE;AADO,eAF2B,CADnC,CAAP;AAOD,aAtBD,CAFK,EAyBL,iEAAU,UAAAiC,OAAO,EAAI;AACnBa,yBAAW,GAAGb,OAAO,CAACoB,IAAtB;AACA,qBAAO,MAAI,CAAC5D,MAAZ;AACD,aAHD,CAzBK,EA6BL,4DAAK,CAAL,CA7BK,EA8BL,2DAAI,UAAAA,MAAM,EAAI;AACZsD,sBAAQ,CAAC/C,EAAT,GAAc8C,WAAd;;AACA,oBAAI,CAACjB,OAAL,CAAaS,IAAb,CAAkB7C,MAAM,CAAC6D,MAAP,CAAcP,QAAd,CAAlB;AACD,aAHD,CA9BK,CAAP;AAmCD;AAxJuB;AAAA;AAAA,sCA0JZQ,OA1JY,EA0JK;AAC3B,mBAAO,KAAK3B,IAAL,qBACF,yEAAYI,WADV,qBACgCuB,OADhC,WAAP;AAGD;AA9JuB;AAAA;AAAA,sCAgKZzD,KAhKY,EAgKE;AAAA;;AACxB,gBAAI0D,aAAJ;AACA,mBAAO,KAAK/D,MAAL,CAAYqC,IAAZ,CACL,4DAAK,CAAL,CADK,EAEL,iEAAU,UAAArC,MAAM,EAAI;AAClB,kBAAI,CAACA,MAAD,IAAWA,MAAM,CAACgE,MAAP,IAAiB,CAAhC,EAAmC;AACjC,uBAAO,MAAI,CAAC5C,WAAL,EAAP;AACD,eAFD,MAEO;AACL,uBAAO,gDAAGpB,MAAH,CAAP;AACD;AACF,aAND,CAFK,EASL,iEAAU,UAAAA,MAAM,EAAI;AAClB,kBAAMiE,iBAAiB,GAAGjE,MAAM,CAACkE,SAAP,CAAiB,UAAAC,EAAE;AAAA,uBAAIA,EAAE,CAAC5D,EAAH,KAAUF,KAAK,CAACE,EAApB;AAAA,eAAnB,CAA1B;AACAwD,2BAAa,sBAAO/D,MAAP,CAAb;AACA+D,2BAAa,CAACE,iBAAD,CAAb,GAAmC5D,KAAnC;AACA,qBAAO,MAAI,CAAC8B,IAAL,CAAUiC,GAAV,WACF,yEAAY7B,WADV,qBACgClC,KAAK,CAACE,EADtC,YAC+C,gCAC/CwD,aAAa,CAACE,iBAAD,CADkC,GACf;AAAE1D,kBAAE,EAAE;AAAN,eADe,CAD/C,CAAP;AAID,aARD,CATK,EAkBL,2DAAI,YAAM;AACR,oBAAI,CAAC6B,OAAL,CAAaS,IAAb,CAAkBkB,aAAlB;AACD,aAFD,CAlBK,CAAP;AAsBD;AAxLuB;AAAA;AAAA,8BAGX;AACX,mBAAO,KAAK3B,OAAL,CAAaiC,YAAb,EAAP;AACD;AALuB;;AAAA;AAAA,S;;;;gBAnBjB;;gBALA;;;;AAwBInC,mBAAa,6DAHzB,iEAAW;AACVoC,kBAAU,EAAE;AADF,OAAX,CAGyB,GAAbpC,aAAa,CAAb","file":"discover-discover-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <!-- <ion-button (click)=\\\"onOpenMenu()\\\">\\n        Open\\n      </ion-button> -->\\n    </ion-buttons>\\n    <ion-title #welcome>Welcome {{displayName?displayName:email}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <ion-segment (ionChange)=\\\"onFilterUpdate($event)\\\" value=\\\"all\\\">\\n    <ion-segment-button value=\\\"all\\\">All Camp Sites</ion-segment-button>\\n    <ion-segment-button value=\\\"bookable\\\">Bookable Camp Sites</ion-segment-button>\\n  </ion-segment>\\n  <ion-grid *ngIf=\\\"isLoading\\\">\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" size-sm=\\\"8\\\" offset-sm=\\\"2\\\" class=\\\"ion-text-center\\\">\\n        <ion-spinner color=\\\"primary\\\"></ion-spinner>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <ion-grid\\n    *ngIf=\\\"!isLoading && (!relevantPlaces || relevantPlaces.length <= 0)\\\"\\n  >\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" size-sm=\\\"8\\\" offset-sm=\\\"2\\\" class=\\\"ion-text-center\\\">\\n        <p>There are no bookable camps right now, please come back later!</p>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <ion-grid *ngIf=\\\"!isLoading && relevantPlaces.length > 0\\\">\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" size-sm=\\\"8\\\" offset-sm=\\\"2\\\" class=\\\"ion-text-center\\\">\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-title>{{ relevantPlaces[0].title }}</ion-card-title>\\n            <ion-card-subtitle\\n              >{{ relevantPlaces[0].price | currency }} /\\n              Night</ion-card-subtitle\\n            >\\n          </ion-card-header>\\n          <ion-img [src]=\\\"relevantPlaces[0].imageDataUrl\\\"></ion-img>\\n          <ion-card-content>\\n            <p>{{ relevantPlaces[0].description }}</p>\\n          </ion-card-content>\\n          <div>\\n            <ion-button\\n              fill=\\\"clear\\\"\\n              color=\\\"primary\\\"\\n              [routerLink]=\\\"[\\n                '/',\\n                'places',\\n                'tabs',\\n                'discover',\\n                relevantPlaces[0].id\\n              ]\\\"\\n            >\\n              More\\n            </ion-button>\\n          </div>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" size-sm=\\\"8\\\" offset-sm=\\\"2\\\" class=\\\"ion-text-center\\\">\\n              <ion-list *ngIf=\\\"listedLoadedPlaces.length > 0\\\">\\n              <ion-item-sliding *ngFor=\\\"let place of listedLoadedPlaces\\\" #slidingItem>\\n                  <ion-item [routerLink]=\\\"['/', 'places', 'tabs', 'discover', place.id]\\\">\\n                      <ion-thumbnail slot=\\\"start\\\">\\n                        <ion-img [src]=\\\"place.imageDataUrl\\\"></ion-img>\\n                      </ion-thumbnail>\\n                      <ion-label>\\n                          <h2>{{ place.title }}</h2>\\n                          <p>{{ place.description }}</p>\\n                      </ion-label>\\n                    </ion-item>\\n              </ion-item-sliding>\\n            </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DiscoverPage } from './discover.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DiscoverPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [DiscoverPage]\n})\nexport class DiscoverPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BsYWNlcy9kaXNjb3Zlci9kaXNjb3Zlci5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MenuController } from '@ionic/angular';\nimport { SegmentChangeEventDetail } from '@ionic/core';\nimport { Subscription } from 'rxjs';\n\nimport { PlacesService } from '../places.service';\nimport { Place } from '../place.model';\nimport { AuthService } from '../../auth/auth.service';\nimport { take, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-discover',\n  templateUrl: './discover.page.html',\n  styleUrls: ['./discover.page.scss']\n})\nexport class DiscoverPage implements OnInit, OnDestroy {\n  loadedPlaces: Place[];\n  listedLoadedPlaces: Place[];\n  relevantPlaces: Place[];\n  isLoading = false;\n  filter: string = 'all';\n  displayName: string;\n  email: string;\n  items = Array.from(document.querySelector('ion-list').children);\n  private placesSub: Subscription;\n  private userSub: Subscription;\n  constructor(\n    private placesService: PlacesService,\n    private menuCtrl: MenuController,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.userSub=this.authService.user.subscribe(user => {\n      if(user){\n        this.displayName=user.displayName;\n        this.email=user.email;\n        console.log(user);\n        this.placesSub = this.placesService.places.subscribe(places => {\n          this.loadedPlaces = places;\n          if (this.filter === 'all') {\n            this.relevantPlaces = this.loadedPlaces;\n            this.listedLoadedPlaces = this.relevantPlaces.slice(1);\n          } else {\n            this.relevantPlaces = this.loadedPlaces.filter(\n              place => place.userId !== user.id\n            );\n            this.listedLoadedPlaces = this.relevantPlaces.slice(1);\n          }\n          console.log(this.listedLoadedPlaces);\n        });\n      }\n    });\n\n  }\n   handleInput(event) {\n    const query = event.target.value.toLowerCase();\n    requestAnimationFrame(() => {\n      this.items.forEach(item => {\n        const shouldShow = item.textContent.toLowerCase().indexOf(query) > -1;\n        item['style'].display = shouldShow ? 'block' : 'none';\n      });\n    });\n  }\n  ionViewWillEnter() {\n    this.isLoading = true;\n    this.placesService.fetchPlaces().subscribe(() => {\n      this.isLoading = false;\n    });\n  }\n\n  onOpenMenu() {\n    this.menuCtrl.toggle();\n  }\n\n  onFilterUpdate(event: CustomEvent<SegmentChangeEventDetail>) {\n    this.authService.userId.subscribe(userId => {\n    this.filter = event.detail.value;\n    if (this.filter === 'all') {\n      this.relevantPlaces = this.loadedPlaces;\n      this.listedLoadedPlaces = this.relevantPlaces.slice(1);\n    } else {\n      this.relevantPlaces = this.loadedPlaces.filter(\n        place => place.userId !== userId\n      );\n      this.listedLoadedPlaces = this.relevantPlaces.slice(1);\n    }\n    });\n  }\n\n  ngOnDestroy() {\n    if(this.userSub){\n      this.userSub.unsubscribe();\n    }\n    if (this.placesSub) {\n      this.placesSub.unsubscribe();\n    }\n  }\n}\n","import { PlaceLocation } from './location.model';\n\nexport class Place {\n  constructor(\n    public id: string,\n    public title: string,\n    public description: string,\n    public price: number,\n    public availableFrom: Date,\n    public availableTo: Date,\n    public userId: string,\n    public location: PlaceLocation,\n    public imageDataUrl: string\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, of, Observable } from 'rxjs';\nimport { take, map, tap, delay, switchMap } from 'rxjs/operators';\n\nimport { Place } from './place.model';\nimport { AuthService } from '../auth/auth.service';\nimport { PlaceLocation } from './location.model';\nimport { environment } from 'src/environments/environment';\n\ninterface PlaceData {\n  availableFrom: string;\n  availableTo: string;\n  description: string;\n  imageUrl: string;\n  price: number;\n  title: string;\n  userId: string;\n  location: PlaceLocation;\n  imageDataUrl: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlacesService {\n  private _places = new BehaviorSubject<Place[]>([]);\n\n  get places() {\n    return this._places.asObservable();\n  }\n\n  constructor(private authService: AuthService, private http: HttpClient) {}\n\n  fetchPlaces() {\n    return this.authService.userId.pipe(switchMap(userId=>{\n      return this.http\n        .get<{ [key: string]: PlaceData }>(\n          `${environment.firebaseUrl}/places.json`\n        )\n        .pipe(\n          map(resData => {\n            const places = [];\n            for (const key in resData) {\n              if (resData.hasOwnProperty(key)) {\n                places.push(\n                  new Place(\n                    key,\n                    resData[key].title,\n                    resData[key].description,\n                    resData[key].price,\n                    new Date(resData[key].availableFrom),\n                    new Date(resData[key].availableTo),\n                    resData[key].userId,\n                    resData[key].location,\n                    resData[key].imageDataUrl\n                  )\n                );\n              }\n            }\n            return places;\n          }),\n          tap(places => {\n            this._places.next(places);\n          })\n        );\n    }));\n  }\n\n  fetchOffers() {\n    let resData;\n    return this.authService.user.pipe(switchMap(user=>{\n      return this.http\n        .get<{ [key: string]: PlaceData }>(\n          `${environment.firebaseUrl}/places.json`\n        )\n        .pipe(\n          switchMap(res=>{\n            resData=res;\n            return this.authService.checkUserIsAdmin();\n          }),\n          map(userIsAdmin => {\n            const places = [];\n            for (const key in resData) {\n              if (resData.hasOwnProperty(key) && (resData[key].userId==user.id || userIsAdmin==true)) {\n                places.push(\n                  new Place(\n                    key,\n                    resData[key].title,\n                    resData[key].description,\n                    resData[key].price,\n                    new Date(resData[key].availableFrom),\n                    new Date(resData[key].availableTo),\n                    resData[key].userId,\n                    resData[key].location,\n                    resData[key].imageDataUrl\n                  )\n                );\n              }\n            }\n            return places;\n          }),\n          tap(places => {\n            this._places.next(places);\n          })\n        );\n    }));\n  }\n\n  getPlace(id: string) {\n    return this.http\n      .get<PlaceData>(\n        `${environment.firebaseUrl}/places/${id}.json`\n      )\n      .pipe(\n        map(placeData => {\n          return new Place(\n            id,\n            placeData.title,\n            placeData.description,\n            placeData.price,\n            new Date(placeData.availableFrom),\n            new Date(placeData.availableTo),\n            placeData.userId,\n            placeData.location,\n            placeData.imageDataUrl\n          );\n        })\n      );\n  }\n\n  addPlace(\n    title: string,\n    description: string,\n    price: number,\n    dateFrom: Date,\n    dateTo: Date,\n    location: PlaceLocation,\n    imageDataURL: string\n  ) {\n    let generatedId: string;\n    let newPlace: Place;\n    return this.authService.userId.pipe(\n      take(1),\n      switchMap(userId => {\n        if (!userId) {\n          throw new Error('No user found!');\n        }\n        newPlace = new Place(\n          Math.random().toString(),\n          title,\n          description,\n          price,\n          dateFrom,\n          dateTo,\n          userId,\n          location,\n          imageDataURL\n        );\n        return this.http.post<{ name: string }>(\n          `${environment.firebaseUrl}/places.json`,\n          {\n            ...newPlace,\n            id: null\n          }\n        );\n      }),\n      switchMap(resData => {\n        generatedId = resData.name;\n        return this.places;\n      }),\n      take(1),\n      tap(places => {\n        newPlace.id = generatedId;\n        this._places.next(places.concat(newPlace));\n      })\n    );\n  }\n\n  deletePlace(placeId: string) {\n    return this.http.delete(\n      `${environment.firebaseUrl}/places/${placeId}.json`\n    );\n  }\n\n  updatePlace(place: Place) {\n    let updatedPlaces: Place[];\n    return this.places.pipe(\n      take(1),\n      switchMap(places => {\n        if (!places || places.length <= 0) {\n          return this.fetchPlaces();\n        } else {\n          return of(places);\n        }\n      }),\n      switchMap(places => {\n        const updatedPlaceIndex = places.findIndex(pl => pl.id === place.id);\n        updatedPlaces = [...places];\n        updatedPlaces[updatedPlaceIndex] = place;\n        return this.http.put(\n          `${environment.firebaseUrl}/places/${place.id}.json`,\n          { ...updatedPlaces[updatedPlaceIndex], id: null }\n        );\n      }),\n      tap(() => {\n        this._places.next(updatedPlaces);\n      })\n    );\n  }\n}\n"]}