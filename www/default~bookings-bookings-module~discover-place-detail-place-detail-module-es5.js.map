{"version":3,"sources":["webpack:///src/app/bookings/booking.model.ts","webpack:///src/app/bookings/booking.service.ts","webpack:///src/app/places/place.model.ts","webpack:///src/app/places/places.service.ts","webpack:///src/environments/environment.prod.ts"],"names":["Booking","id","placeId","userEmail","placeTitle","imageDataUrl","firstName","lastName","guestNumber","bookedFrom","bookedTo","BookingService","authService","http","_bookings","placeImage","dateFrom","dateTo","generatedId","newBooking","user","pipe","console","log","Math","random","toString","email","post","firebaseUrl","resData","name","bookings","next","concat","put","filter","booking","bookingId","b","bookingData","get","res","checkUserIsAdmin","userIsAdmin","key","hasOwnProperty","push","Date","asObservable","providedIn","Place","title","description","price","availableFrom","availableTo","userId","location","PlacesService","_places","places","placeData","imageDataURL","newPlace","Error","place","updatedPlaces","length","fetchPlaces","updatedPlaceIndex","findIndex","pl","environment","production","googleMapsAPIKey","firebaseAPIKey"],"mappings":"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","file":"default~bookings-bookings-module~discover-place-detail-place-detail-module-es5.js","sourcesContent":["export class Booking {\n  constructor(\n    public id: string,\n    public placeId: string,\n    public userEmail: string,\n    public placeTitle: string,\n    public imageDataUrl: string,\n    public firstName: string,\n    public lastName: string,\n    public guestNumber: number,\n    public bookedFrom: Date,\n    public bookedTo: Date\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { take, tap, delay, switchMap, map } from 'rxjs/operators';\n\nimport { Booking } from './booking.model';\nimport { AuthService } from '../auth/auth.service';\nimport { environment } from 'src/environments/environment.prod';\n\ninterface BookingData {\n  bookedFrom: string;\n  bookedTo: string;\n  firstName: string;\n  guestNumber: number;\n  lastName: string;\n  placeId: string;\n  placeImage: string;\n  placeTitle: string;\n  userEmail: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class BookingService {\n  private _bookings = new BehaviorSubject<Booking[]>([]);\n\n  get bookings() {\n    return this._bookings.asObservable();\n  }\n\n  constructor(private authService: AuthService, private http: HttpClient) {}\n\n  addBooking(\n    placeId: string,\n    placeTitle: string,\n    placeImage: string,\n    firstName: string,\n    lastName: string,\n    guestNumber: number,\n    dateFrom: Date,\n    dateTo: Date\n  ) {\n    let generatedId: string;\n    let newBooking;\n    return this.authService.user.pipe(take(1), switchMap(user => {\n      console.log(dateFrom);\n      console.log(dateTo);\n      newBooking = new Booking(\n        Math.random().toString(),\n        placeId,\n        user.email,\n        placeTitle,\n        placeImage,\n        firstName,\n        lastName,\n        guestNumber,\n        dateFrom,\n        dateTo\n      );\n      console.log(newBooking);\n      return this.http\n        .post<{ name: string }>(\n          `${environment.firebaseUrl}/bookings.json`,\n          { ...newBooking, id: null }\n        );\n    }),\n        switchMap(resData => {\n          generatedId = resData.name;\n          return this.bookings;\n        }),\n        take(1),\n        tap(bookings => {\n          newBooking.id = generatedId;\n          this._bookings.next(bookings.concat(newBooking));\n        })\n      );\n  }\n\n  updateBooking(\n    id: string,\n    placeId: string,\n    placeTitle: string,\n    placeImage: string,\n    firstName: string,\n    lastName: string,\n    guestNumber: number,\n    dateFrom: Date,\n    dateTo: Date\n  ) {\n    let generatedId: string;\n    let newBooking;\n    return this.authService.user.pipe(take(1), switchMap(user => {\n      console.log(dateFrom);\n      console.log(dateTo);\n      newBooking = new Booking(\n        id,\n        placeId,\n        user.email,\n        placeTitle,\n        placeImage,\n        firstName,\n        lastName,\n        guestNumber,\n        dateFrom,\n        dateTo\n      );\n      console.log(newBooking);\n      return this.http\n        .put<{ name: string }>(\n          `${environment.firebaseUrl}/bookings/${id}.json`,\n          { ...newBooking, id: null }\n        );\n    }),\n        switchMap(resData => {\n          generatedId = resData.name;\n          return this.bookings;\n        }),\n        take(1),\n        tap(bookings => {\n          newBooking.id = generatedId;\n          bookings=bookings.filter(booking=>booking.id!=id);\n          this._bookings.next(bookings.concat(newBooking));\n        })\n      );\n  }\n\n  cancelBooking(bookingId: string) {\n    return this.http\n      .delete(\n        `${environment.firebaseUrl}/bookings/${bookingId}.json`\n      )\n      .pipe(\n        switchMap(() => {\n          return this.bookings;\n        }),\n        take(1),\n        tap(bookings => {\n          this._bookings.next(bookings.filter(b => b.id !== bookingId));\n        })\n      );\n  }\n\n  fetchBookings() {\n    let bookingData;\n    return this.authService.user.pipe(switchMap(user=>{\n      return this.http\n      .get<{ [key: string]: BookingData }>(\n        `${environment.firebaseUrl}/bookings.json`\n      )\n      .pipe(\n        switchMap(res=>{\n          bookingData=res;\n          return this.authService.checkUserIsAdmin();\n        }),\n        map(userIsAdmin => {\n          const bookings = [];\n          for (const key in bookingData) {\n            if (bookingData.hasOwnProperty(key)) {\n              if(bookingData[key].userEmail == user.email || userIsAdmin == true){\n                bookings.push(\n                  new Booking(\n                    key,\n                    bookingData[key].placeId,\n                    bookingData[key].userEmail,\n                    bookingData[key].placeTitle,\n                    bookingData[key].placeImage,\n                    bookingData[key].firstName,\n                    bookingData[key].lastName,\n                    bookingData[key].guestNumber,\n                    new Date(bookingData[key].bookedFrom),\n                    new Date(bookingData[key].bookedTo)\n                  )\n                );\n              }\n              }\n          }\n          return bookings;\n        }),\n        tap(bookings => {\n          this._bookings.next(bookings);\n        })\n      );\n    }));\n    \n  }\n}\n","import { PlaceLocation } from './location.model';\n\nexport class Place {\n  constructor(\n    public id: string,\n    public title: string,\n    public description: string,\n    public price: number,\n    public availableFrom: Date,\n    public availableTo: Date,\n    public userId: string,\n    public location: PlaceLocation,\n    public imageDataUrl: string\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, of, Observable } from 'rxjs';\nimport { take, map, tap, delay, switchMap } from 'rxjs/operators';\n\nimport { Place } from './place.model';\nimport { AuthService } from '../auth/auth.service';\nimport { PlaceLocation } from './location.model';\nimport { environment } from 'src/environments/environment';\n\ninterface PlaceData {\n  availableFrom: string;\n  availableTo: string;\n  description: string;\n  imageUrl: string;\n  price: number;\n  title: string;\n  userId: string;\n  location: PlaceLocation;\n  imageDataUrl: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlacesService {\n  private _places = new BehaviorSubject<Place[]>([]);\n\n  get places() {\n    return this._places.asObservable();\n  }\n\n  constructor(private authService: AuthService, private http: HttpClient) {}\n\n  fetchPlaces() {\n    return this.authService.userId.pipe(switchMap(userId=>{\n      return this.http\n        .get<{ [key: string]: PlaceData }>(\n          `${environment.firebaseUrl}/places.json`\n        )\n        .pipe(\n          map(resData => {\n            const places = [];\n            for (const key in resData) {\n              if (resData.hasOwnProperty(key)) {\n                places.push(\n                  new Place(\n                    key,\n                    resData[key].title,\n                    resData[key].description,\n                    resData[key].price,\n                    new Date(resData[key].availableFrom),\n                    new Date(resData[key].availableTo),\n                    resData[key].userId,\n                    resData[key].location,\n                    resData[key].imageDataUrl\n                  )\n                );\n              }\n            }\n            return places;\n          }),\n          tap(places => {\n            this._places.next(places);\n          })\n        );\n    }));\n  }\n\n  fetchOffers() {\n    let resData;\n    return this.authService.user.pipe(switchMap(user=>{\n      return this.http\n        .get<{ [key: string]: PlaceData }>(\n          `${environment.firebaseUrl}/places.json`\n        )\n        .pipe(\n          switchMap(res=>{\n            resData=res;\n            return this.authService.checkUserIsAdmin();\n          }),\n          map(userIsAdmin => {\n            const places = [];\n            for (const key in resData) {\n              if (resData.hasOwnProperty(key) && (resData[key].userId==user.id || userIsAdmin==true)) {\n                places.push(\n                  new Place(\n                    key,\n                    resData[key].title,\n                    resData[key].description,\n                    resData[key].price,\n                    new Date(resData[key].availableFrom),\n                    new Date(resData[key].availableTo),\n                    resData[key].userId,\n                    resData[key].location,\n                    resData[key].imageDataUrl\n                  )\n                );\n              }\n            }\n            return places;\n          }),\n          tap(places => {\n            this._places.next(places);\n          })\n        );\n    }));\n  }\n\n  getPlace(id: string) {\n    return this.http\n      .get<PlaceData>(\n        `${environment.firebaseUrl}/places/${id}.json`\n      )\n      .pipe(\n        map(placeData => {\n          return new Place(\n            id,\n            placeData.title,\n            placeData.description,\n            placeData.price,\n            new Date(placeData.availableFrom),\n            new Date(placeData.availableTo),\n            placeData.userId,\n            placeData.location,\n            placeData.imageDataUrl\n          );\n        })\n      );\n  }\n\n  addPlace(\n    title: string,\n    description: string,\n    price: number,\n    dateFrom: Date,\n    dateTo: Date,\n    location: PlaceLocation,\n    imageDataURL: string\n  ) {\n    let generatedId: string;\n    let newPlace: Place;\n    return this.authService.userId.pipe(\n      take(1),\n      switchMap(userId => {\n        if (!userId) {\n          throw new Error('No user found!');\n        }\n        newPlace = new Place(\n          Math.random().toString(),\n          title,\n          description,\n          price,\n          dateFrom,\n          dateTo,\n          userId,\n          location,\n          imageDataURL\n        );\n        return this.http.post<{ name: string }>(\n          `${environment.firebaseUrl}/places.json`,\n          {\n            ...newPlace,\n            id: null\n          }\n        );\n      }),\n      switchMap(resData => {\n        generatedId = resData.name;\n        return this.places;\n      }),\n      take(1),\n      tap(places => {\n        newPlace.id = generatedId;\n        this._places.next(places.concat(newPlace));\n      })\n    );\n  }\n\n  deletePlace(placeId: string) {\n    return this.http.delete(\n      `${environment.firebaseUrl}/places/${placeId}.json`\n    );\n  }\n\n  updatePlace(place: Place) {\n    let updatedPlaces: Place[];\n    return this.places.pipe(\n      take(1),\n      switchMap(places => {\n        if (!places || places.length <= 0) {\n          return this.fetchPlaces();\n        } else {\n          return of(places);\n        }\n      }),\n      switchMap(places => {\n        const updatedPlaceIndex = places.findIndex(pl => pl.id === place.id);\n        updatedPlaces = [...places];\n        updatedPlaces[updatedPlaceIndex] = place;\n        return this.http.put(\n          `${environment.firebaseUrl}/places/${place.id}.json`,\n          { ...updatedPlaces[updatedPlaceIndex], id: null }\n        );\n      }),\n      tap(() => {\n        this._places.next(updatedPlaces);\n      })\n    );\n  }\n}\n","export const environment = {\n  production: true,\n  googleMapsAPIKey: 'AIzaSyDMqXL534Jdd0JTcpdJRQNr1gFpjpR_pes',\n  firebaseAPIKey: 'AIzaSyBisUq3FML1Kazn-H-JVJ46y_iC9ZPprMI',\n  firebaseUrl: 'https://teak-mantis-271722.firebaseio.com/'\n};"]}