{"version":3,"sources":["./src/app/auth/auth.page.html","./src/app/auth/auth.module.ts","./src/app/auth/auth.page.scss","./src/app/auth/auth.page.ts"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{ isLogin ? 'Login' : 'Signup' }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\" *ngIf='isLogin' id=signIn>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-list>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">E-Mail</ion-label>\\n              <ion-input\\n                type=\\\"email\\\"\\n                ngModel\\n                name=\\\"email\\\"\\n                required\\n                email\\n                #emailCtrl=\\\"ngModel\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item\\n              *ngIf=\\\"!emailCtrl.valid && emailCtrl.touched\\\"\\n              lines=\\\"none\\\"\\n            >\\n              <ion-label>\\n                Should be a valid email address.\\n              </ion-label>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Password</ion-label>\\n              <ion-input\\n                type=\\\"password\\\"\\n                ngModel\\n                name=\\\"password\\\"\\n                required\\n                minlength=\\\"6\\\"\\n                #passwordCtrl=\\\"ngModel\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item\\n              *ngIf=\\\"!passwordCtrl.valid && passwordCtrl.touched\\\"\\n              lines=\\\"none\\\"\\n            >\\n              <ion-label>\\n                Should at least be 6 characters long.\\n              </ion-label>\\n            </ion-item>\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-button \\n          type=\\\"button\\\" \\n          color=\\\"primary\\\" \\n          fill=\\\"clear\\\" \\n          expand=\\\"block\\\"\\n          (click)=\\\"onSwitchAuthMode()\\\">\\n            Switch to {{ !isLogin ? 'Login' : 'Signup' }}\\n          </ion-button>\\n          <ion-button\\n            type=\\\"submit\\\"\\n            color=\\\"primary\\\"\\n            expand=\\\"block\\\"\\n            [disabled]=\\\"!f.valid\\\"\\n          >\\n          Login \\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\" *ngIf='!isLogin' id='signup'>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-list>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Username</ion-label>\\n              <ion-input\\n                type=\\\"Username\\\"\\n                ngModel\\n                name=\\\"username\\\"\\n                required\\n                username\\n                #usernameCtrl=\\\"ngModel\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item\\n              *ngIf=\\\"!usernameCtrl.valid && usernameCtrl.touched\\\"\\n              lines=\\\"none\\\"\\n            >\\n              <ion-label>\\n                Should be a valid username.\\n              </ion-label>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">E-Mail</ion-label>\\n              <ion-input\\n                type=\\\"email\\\"\\n                ngModel\\n                name=\\\"email\\\"\\n                required\\n                email\\n                #emailCtrl=\\\"ngModel\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item\\n              *ngIf=\\\"!emailCtrl.valid && emailCtrl.touched\\\"\\n              lines=\\\"none\\\"\\n            >\\n              <ion-label>\\n                Should be a valid email address.\\n              </ion-label>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Password</ion-label>\\n              <ion-input\\n                type=\\\"password\\\"\\n                ngModel\\n                name=\\\"password\\\"\\n                required\\n                minlength=\\\"6\\\"\\n                #passwordCtrl=\\\"ngModel\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item\\n              *ngIf=\\\"!passwordCtrl.valid && passwordCtrl.touched\\\"\\n              lines=\\\"none\\\"\\n            >\\n              <ion-label>\\n                Should at least be 6 characters long.\\n              </ion-label>\\n            </ion-item>\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-button \\n          type=\\\"button\\\" \\n          color=\\\"primary\\\" \\n          fill=\\\"clear\\\" \\n          expand=\\\"block\\\"\\n          (click)=\\\"onSwitchAuthMode()\\\">\\n            Switch to Login\\n          </ion-button>\\n          <ion-button\\n            type=\\\"submit\\\"\\n            color=\\\"primary\\\"\\n            expand=\\\"block\\\"\\n            [disabled]=\\\"!f.valid\\\"\\n          >\\n            Signup\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthPage } from './auth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AuthPage]\n})\nexport class AuthPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvYXV0aC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { LoadingController, AlertController } from '@ionic/angular';\n\nimport { AuthService, AuthResponseData } from './auth.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.page.html',\n  styleUrls: ['./auth.page.scss']\n})\nexport class AuthPage implements OnInit {\n  @ViewChild('f', { static: false }) form: NgForm;\n  // @ViewChild('f2', { static: false }) form2: NgForm;\n  isLoading = false;\n  isLogin = true;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private loadingCtrl: LoadingController,\n    private alertCtrl: AlertController\n  ) {\n    this.isLogin = true;\n  }\n\n  ngOnInit() {}\n  private showAlert(header:string, message: string) {\n    this.alertCtrl.create({header: header, message: message, buttons: ['okay']})\n    .then((ctrl) => {\n      ctrl.present();\n    });\n  }\n\n  \n  onLogin(email: string, password: string, displayName?: string) {\n    this.isLoading = true;\n    this.loadingCtrl\n      .create({ keyboardClose: true, message: 'Logging in...' })\n      .then(loadingEl => {\n        loadingEl.present();\n        console.log(this.isLogin);\n        let authObs: Observable<AuthResponseData>;\n        if (this.isLogin) {\n          authObs = this.authService.login(email, password);\n          \n        } else {\n          authObs = this.authService.signup(email, password, displayName);\n        }\n        authObs.subscribe((resData) => {\n          this.isLoading = false;\n          loadingEl.dismiss();\n          if (this.isLogin) {\n            this.router.navigateByUrl('/places/tabs/discover');\n          } else {\n            let header = 'Sign up Successful';\n            let message = 'Back to login page';\n            this.showAlert(header, message);\n            this.isLogin = !this.isLogin;\n          }\n        }, error => {\n          let header = \"Authentication failed\";\n          loadingEl.dismiss();\n          const code = error.error.error.message;\n          let message = 'could not sign up, please try again';\n          console.log(code);\n          if (code === 'EMAIL_EXISTS') {\n            message = 'this email already exists';\n          }\n          if (code === 'EMAIL_NOT_FOUND') {\n            message = 'this email has not been registered';\n          }\n          if (code === 'INVALID_PASSWORD') {\n            message = 'this password is invalid';\n          }\n          this.showAlert(header, message);\n        });\n      });\n  }\n\n  onSwitchAuthMode() {\n    this.isLogin = !this.isLogin;\n  }\n\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n    const email = form.value.email;\n    const password = form.value.password;\n    if(!this.isLogin){\n      const displayName=form.value.username;\n      this.onLogin(email, password, displayName)\n    }else{\n      this.onLogin(email, password);\n    }\n    \n  }\n}\n"],"sourceRoot":"webpack:///"}