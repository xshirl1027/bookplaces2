{"version":3,"sources":["webpack:///src/app/bookings/create-booking/create-booking.component.html","webpack:///src/app/places/discover/place-detail/place-detail.page.html","webpack:///src/app/bookings/create-booking/create-booking.component.scss","webpack:///src/app/bookings/create-booking/create-booking.component.ts","webpack:///src/app/places/discover/place-detail/place-detail.module.ts","webpack:///src/app/places/discover/place-detail/place-detail.page.scss","webpack:///src/app/places/discover/place-detail/place-detail.page.ts"],"names":["CreateBookingComponent","modalCtrl","availableFrom","Date","selectedPlace","availableTo","selectedMode","startDate","getTime","Math","random","toISOString","endDate","dismiss","form","valid","datesValid","bookingData","firstName","value","lastName","guestNumber","selector","template","routes","path","component","PlaceDetailPageModule","imports","forChild","declarations","entryComponents","PlaceDetailPage","navCtrl","route","placesService","actionSheetCtrl","bookingService","loadingCtrl","authService","alertCtrl","router","isBookable","isLoading","paramMap","subscribe","has","navigateBack","fetchedUserId","userId","pipe","Error","getPlace","get","place","error","create","header","message","buttons","text","handler","navigate","then","alertEl","present","openBookingModal","role","actionSheetEl","mode","console","log","componentProps","modalEl","onDidDismiss","resultData","loadingEl","data","addBooking","id","title","imageDataUrl","center","lat","location","lng","selectable","address","closeButtonText","modalData","placeSub","unsubscribe"],"mappings":"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","file":"discover-place-detail-place-detail-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{ selectedPlace.title }}</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button (click)=\\\"onCancel()\\\">\\n        <ion-icon name=\\\"close\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-text-center\\\" padding>\\n  <form (ngSubmit)=\\\"onBookPlace()\\\" #f=\\\"ngForm\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">First Name</ion-label>\\n            <ion-input\\n              type=\\\"text\\\"\\n              ngModel\\n              name=\\\"first-name\\\"\\n              required\\n            ></ion-input>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Last Name</ion-label>\\n            <ion-input\\n              type=\\\"text\\\"\\n              ngModel\\n              name=\\\"last-name\\\"\\n              required\\n            ></ion-input>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Number of Guests</ion-label>\\n            <ion-select [ngModel]=\\\"'2'\\\" name=\\\"guest-number\\\">\\n              <ion-select-option value=\\\"1\\\">1</ion-select-option>\\n              <ion-select-option value=\\\"2\\\">2</ion-select-option>\\n              <ion-select-option value=\\\"3\\\">3</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"3\\\" offset-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">From</ion-label>\\n            <ion-datetime\\n              display-format=\\\"MMM DD YYYY\\\"\\n              picker-format=\\\"YY MMM DD\\\"\\n              [min]=\\\"selectedPlace.availableFrom.toISOString()\\\"\\n              [max]=\\\"selectedPlace.availableTo.toISOString()\\\"\\n              [ngModel]=\\\"startDate\\\"\\n              name=\\\"date-from\\\"\\n              required\\n              #startDateCtrl=\\\"ngModel\\\"\\n            ></ion-datetime>\\n          </ion-item>\\n        </ion-col>\\n        <ion-col size-sm=\\\"3\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">To</ion-label>\\n            <ion-datetime\\n              display-format=\\\"MMM DD YYYY\\\"\\n              picker-format=\\\"YY MMM DD\\\"\\n              [min]=\\\"startDateCtrl.value\\\"\\n              [max]=\\\"selectedPlace.availableTo.toISOString()\\\"\\n              [ngModel]=\\\"endDate\\\"\\n              name=\\\"date-to\\\"\\n              required\\n            ></ion-datetime>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-button\\n            type=\\\"submit\\\"\\n            color=\\\"primary\\\"\\n            expand=\\\"block\\\"\\n            [disabled]=\\\"!f.valid || !datesValid()\\\"\\n          >\\n            Book!\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/places/tabs/discover\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{ isLoading ? 'Loading...' : place.title }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"ion-text-center\\\" *ngIf=\\\"isLoading\\\">\\n    <ion-spinner color=\\\"primary\\\"></ion-spinner>\\n  </div>\\n  <ion-grid class=\\\"ion-no-padding\\\" *ngIf=\\\"!isLoading\\\">\\n    <ion-row>\\n      <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\" class=\\\"ion-no-padding\\\">\\n        <ion-img [src]=\\\"place.imageDataUrl\\\"></ion-img>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\" class=\\\"ion-text-center\\\" padding>\\n        <p>{{ place.description }}</p>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\" class=\\\"ion-text-center address-text\\\" padding>\\n          <p>{{ place.location.address }}</p>\\n        </ion-col>\\n      </ion-row>\\n    <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\" class=\\\"ion-text-center\\\" padding>\\n          <ion-img class=\\\"location-image\\\" (click)=\\\"openMapModal()\\\" [src]=\\\"place.location.staticMapImageUrl\\\"></ion-img>\\n        </ion-col>\\n    </ion-row>\\n    <ion-row *ngIf=\\\"isBookable\\\">\\n      <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\" class=\\\"ion-text-center\\\">\\n        <ion-button color=\\\"primary\\\" margin (click)=\\\"onBookPlace()\\\">Book</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jvb2tpbmdzL2NyZWF0ZS1ib29raW5nL2NyZWF0ZS1ib29raW5nLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { NgForm } from '@angular/forms';\n\nimport { Place } from '../../places/place.model';\n\n@Component({\n  selector: 'app-create-booking',\n  templateUrl: './create-booking.component.html',\n  styleUrls: ['./create-booking.component.scss']\n})\nexport class CreateBookingComponent implements OnInit {\n  @Input() selectedPlace: Place;\n  @Input() selectedMode: 'select' | 'random';\n  @ViewChild('f', { static: false }) form: NgForm;\n  startDate: string;\n  endDate: string;\n\n  constructor(private modalCtrl: ModalController) {}\n\n  ngOnInit() {\n    const availableFrom = new Date(this.selectedPlace.availableFrom);\n    const availableTo = new Date(this.selectedPlace.availableTo);\n    if (this.selectedMode === 'random') {\n      this.startDate = new Date(\n        availableFrom.getTime() +\n          Math.random() *\n            (availableTo.getTime() -\n              7 * 24 * 60 * 60 * 1000 -\n              availableFrom.getTime())\n      ).toISOString();\n\n      this.endDate = new Date(\n        new Date(this.startDate).getTime() +\n          Math.random() *\n            (new Date(this.startDate).getTime() +\n              6 * 24 * 60 * 60 * 1000 -\n              new Date(this.startDate).getTime())\n      ).toISOString();\n    }\n  }\n\n  onCancel() {\n    this.modalCtrl.dismiss(null, 'cancel');\n  }\n\n  onBookPlace() {\n    if (!this.form.valid || !this.datesValid()) {\n      return;\n    }\n\n    this.modalCtrl.dismiss(\n      {\n        bookingData: {\n          firstName: this.form.value['first-name'],\n          lastName: this.form.value['last-name'],\n          guestNumber: +this.form.value['guest-number'],\n          startDate: new Date(this.form.value['date-from']),\n          endDate: new Date(this.form.value['date-to'])\n        }\n      },\n      'confirm'\n    );\n  }\n\n  datesValid() {\n    if (!this.form) {\n      return false;\n    }\n    const startDate = new Date(this.form.value['date-from']);\n    const endDate = new Date(this.form.value['date-to']);\n    return endDate > startDate;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PlaceDetailPage } from './place-detail.page';\nimport { CreateBookingComponent } from '../../../bookings/create-booking/create-booking.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PlaceDetailPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedModule\n  ],\n  declarations: [PlaceDetailPage, CreateBookingComponent],\n  entryComponents: [CreateBookingComponent]\n})\nexport class PlaceDetailPageModule {}\n","export default \".address-text p {\\n  margin-top: 0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGxhY2VzL2Rpc2NvdmVyL3BsYWNlLWRldGFpbC9wbGFjZS1kZXRhaWwucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksd0JBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL3BsYWNlcy9kaXNjb3Zlci9wbGFjZS1kZXRhaWwvcGxhY2UtZGV0YWlsLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hZGRyZXNzLXRleHQgcHtcbiAgICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7XG59Il19 */\";","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  NavController,\n  ModalController,\n  ActionSheetController,\n  LoadingController,\n  AlertController\n} from '@ionic/angular';\nimport { Subscription } from 'rxjs';\n\nimport { PlacesService } from '../../places.service';\nimport { Place } from '../../place.model';\nimport { CreateBookingComponent } from '../../../bookings/create-booking/create-booking.component';\nimport { BookingService } from '../../../bookings/booking.service';\nimport { AuthService } from '../../../auth/auth.service';\nimport { MapModalComponent } from 'src/app/shared/map-modal/map-modal.component';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-place-detail',\n  templateUrl: './place-detail.page.html',\n  styleUrls: ['./place-detail.page.scss']\n})\nexport class PlaceDetailPage implements OnInit, OnDestroy {\n  place: Place;\n  isBookable = false;\n  isLoading = false;\n  private placeSub: Subscription;\n\n  constructor(\n    private navCtrl: NavController,\n    private route: ActivatedRoute,\n    private placesService: PlacesService,\n    private modalCtrl: ModalController,\n    private actionSheetCtrl: ActionSheetController,\n    private bookingService: BookingService,\n    private loadingCtrl: LoadingController,\n    private authService: AuthService,\n    private alertCtrl: AlertController,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('placeId')) {\n        this.navCtrl.navigateBack('/places/tabs/discover');\n        return;\n      }\n      this.isLoading = true;\n      let fetchedUserId;\n      this.authService.userId.pipe(switchMap(userId => {\n        if (!userId) {\n          throw new Error('User not found !');\n        }\n        fetchedUserId = userId;\n        return this.placesService\n        .getPlace(paramMap.get('placeId'));\n      }))\n        .subscribe(\n          place => {\n            this.place = place;\n            this.isBookable = place.userId !== fetchedUserId;\n            this.isLoading = false;\n          },\n          error => {\n            this.alertCtrl\n              .create({\n                header: 'An error ocurred!',\n                message: 'Could not load place.',\n                buttons: [\n                  {\n                    text: 'Okay',\n                    handler: () => {\n                      this.router.navigate(['/places/tabs/discover']);\n                    }\n                  }\n                ]\n              })\n              .then(alertEl => alertEl.present());\n          }\n        );\n    });\n  }\n\n  onBookPlace() {\n    this.actionSheetCtrl\n      .create({\n        header: 'Choose an Action',\n        buttons: [\n          {\n            text: 'Select Date',\n            handler: () => {\n              this.openBookingModal('select');\n            }\n          },\n          {\n            text: 'Random Date',\n            handler: () => {\n              this.openBookingModal('random');\n            }\n          },\n          {\n            text: 'Cancel',\n            role: 'cancel'\n          }\n        ]\n      })\n      .then(actionSheetEl => {\n        actionSheetEl.present();\n      });\n  }\n\n  openBookingModal(mode: 'select' | 'random') {\n    console.log(mode);\n    this.modalCtrl\n      .create({\n        component: CreateBookingComponent,\n        componentProps: { selectedPlace: this.place, selectedMode: mode }\n      })\n      .then(modalEl => {\n        modalEl.present();\n        return modalEl.onDidDismiss();\n      })\n      .then(resultData => {\n        if (resultData.role === 'confirm') {\n          this.loadingCtrl\n            .create({ message: 'Booking place...' })\n            .then(loadingEl => {\n              loadingEl.present();\n              const data = resultData.data.bookingData;\n              console.log(data);\n              this.bookingService\n                .addBooking(\n                  this.place.id,\n                  this.place.title,\n                  this.place.imageDataUrl,\n                  data.firstName,\n                  data.lastName,\n                  data.guestNumber,\n                  new Date(data.startDate),\n                  new Date(data.endDate)\n                )\n                .subscribe(() => {\n                  loadingEl.dismiss();\n                });\n            });\n        }\n      });\n  }\n\n  openMapModal() {\n    this.modalCtrl.create({ component: MapModalComponent, componentProps: {\n      center: {\n        lat: this.place.location.lat,\n        lng: this.place.location.lng\n      },\n        selectable: false,\n        title: this.place.location.address,\n        closeButtonText : \"Close\"}})\n      .then(modalEl => {\n      modalEl.onDidDismiss().then(modalData => {\n        if (!modalData || !modalData.data) {\n          return;\n        }\n      });\n      modalEl.present();\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.placeSub) {\n      this.placeSub.unsubscribe();\n    }\n  }\n}\n"]}