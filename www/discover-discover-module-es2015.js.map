{"version":3,"sources":["./src/app/places/discover/discover.page.html","./src/app/places/discover/discover.module.ts","./src/app/places/discover/discover.page.scss","./src/app/places/discover/discover.page.ts","./src/app/places/place.model.ts","./src/app/places/places.service.ts"],"names":[],"mappings":"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","file":"discover-discover-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <!-- <ion-button (click)=\\\"onOpenMenu()\\\">\\n        Open\\n      </ion-button> -->\\n    </ion-buttons>\\n    <ion-title #welcome>Welcome {{displayName?displayName:email}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <ion-segment (ionChange)=\\\"onFilterUpdate($event)\\\" value=\\\"all\\\">\\n    <ion-segment-button value=\\\"all\\\">All Camp Sites</ion-segment-button>\\n    <ion-segment-button value=\\\"bookable\\\">Bookable Camp Sites</ion-segment-button>\\n  </ion-segment>\\n  <ion-grid *ngIf=\\\"isLoading\\\">\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" size-sm=\\\"8\\\" offset-sm=\\\"2\\\" class=\\\"ion-text-center\\\">\\n        <ion-spinner color=\\\"primary\\\"></ion-spinner>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <ion-grid\\n    *ngIf=\\\"!isLoading && (!relevantPlaces || relevantPlaces.length <= 0)\\\"\\n  >\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" size-sm=\\\"8\\\" offset-sm=\\\"2\\\" class=\\\"ion-text-center\\\">\\n        <p>There are no bookable camps right now, please come back later!</p>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <ion-grid *ngIf=\\\"!isLoading && relevantPlaces.length > 0\\\">\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" size-sm=\\\"8\\\" offset-sm=\\\"2\\\" class=\\\"ion-text-center\\\">\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-title>{{ relevantPlaces[0].title }}</ion-card-title>\\n            <ion-card-subtitle\\n              >{{ relevantPlaces[0].price | currency }} /\\n              Night</ion-card-subtitle\\n            >\\n          </ion-card-header>\\n          <ion-img [src]=\\\"relevantPlaces[0].imageDataUrl\\\"></ion-img>\\n          <ion-card-content>\\n            <p>{{ relevantPlaces[0].description }}</p>\\n          </ion-card-content>\\n          <div>\\n            <ion-button\\n              fill=\\\"clear\\\"\\n              color=\\\"primary\\\"\\n              [routerLink]=\\\"[\\n                '/',\\n                'places',\\n                'tabs',\\n                'discover',\\n                relevantPlaces[0].id\\n              ]\\\"\\n            >\\n              More\\n            </ion-button>\\n          </div>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" size-sm=\\\"8\\\" offset-sm=\\\"2\\\" class=\\\"ion-text-center\\\">\\n              <ion-list *ngIf=\\\"listedLoadedPlaces.length > 0\\\">\\n              <ion-item-sliding *ngFor=\\\"let place of listedLoadedPlaces\\\" #slidingItem>\\n                  <ion-item [routerLink]=\\\"['/', 'places', 'tabs', 'discover', place.id]\\\">\\n                      <ion-thumbnail slot=\\\"start\\\">\\n                        <ion-img [src]=\\\"place.imageDataUrl\\\"></ion-img>\\n                      </ion-thumbnail>\\n                      <ion-label>\\n                          <h2>{{ place.title }}</h2>\\n                          <p>{{ place.description }}</p>\\n                      </ion-label>\\n                    </ion-item>\\n              </ion-item-sliding>\\n            </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DiscoverPage } from './discover.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DiscoverPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [DiscoverPage]\n})\nexport class DiscoverPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BsYWNlcy9kaXNjb3Zlci9kaXNjb3Zlci5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MenuController } from '@ionic/angular';\nimport { SegmentChangeEventDetail } from '@ionic/core';\nimport { Subscription } from 'rxjs';\n\nimport { PlacesService } from '../places.service';\nimport { Place } from '../place.model';\nimport { AuthService } from '../../auth/auth.service';\nimport { take, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-discover',\n  templateUrl: './discover.page.html',\n  styleUrls: ['./discover.page.scss']\n})\nexport class DiscoverPage implements OnInit, OnDestroy {\n  loadedPlaces: Place[];\n  listedLoadedPlaces: Place[];\n  relevantPlaces: Place[];\n  isLoading = false;\n  filter: string = 'all';\n  displayName: string;\n  email: string;\n  items = Array.from(document.querySelector('ion-list').children);\n  private placesSub: Subscription;\n  private userSub: Subscription;\n  constructor(\n    private placesService: PlacesService,\n    private menuCtrl: MenuController,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.userSub=this.authService.user.subscribe(user => {\n      if(user){\n        this.displayName=user.displayName;\n        this.email=user.email;\n        console.log(user);\n        this.placesSub = this.placesService.places.subscribe(places => {\n          this.loadedPlaces = places;\n          if (this.filter === 'all') {\n            this.relevantPlaces = this.loadedPlaces;\n            this.listedLoadedPlaces = this.relevantPlaces.slice(1);\n          } else {\n            this.relevantPlaces = this.loadedPlaces.filter(\n              place => place.userId !== user.id\n            );\n            this.listedLoadedPlaces = this.relevantPlaces.slice(1);\n          }\n          console.log(this.listedLoadedPlaces);\n        });\n      }\n    });\n\n  }\n   handleInput(event) {\n    const query = event.target.value.toLowerCase();\n    requestAnimationFrame(() => {\n      this.items.forEach(item => {\n        const shouldShow = item.textContent.toLowerCase().indexOf(query) > -1;\n        item['style'].display = shouldShow ? 'block' : 'none';\n      });\n    });\n  }\n  ionViewWillEnter() {\n    this.isLoading = true;\n    this.placesService.fetchPlaces().subscribe(() => {\n      this.isLoading = false;\n    });\n  }\n\n  onOpenMenu() {\n    this.menuCtrl.toggle();\n  }\n\n  onFilterUpdate(event: CustomEvent<SegmentChangeEventDetail>) {\n    this.authService.userId.subscribe(userId => {\n    this.filter = event.detail.value;\n    if (this.filter === 'all') {\n      this.relevantPlaces = this.loadedPlaces;\n      this.listedLoadedPlaces = this.relevantPlaces.slice(1);\n    } else {\n      this.relevantPlaces = this.loadedPlaces.filter(\n        place => place.userId !== userId\n      );\n      this.listedLoadedPlaces = this.relevantPlaces.slice(1);\n    }\n    });\n  }\n\n  ngOnDestroy() {\n    if(this.userSub){\n      this.userSub.unsubscribe();\n    }\n    if (this.placesSub) {\n      this.placesSub.unsubscribe();\n    }\n  }\n}\n","import { PlaceLocation } from './location.model';\n\nexport class Place {\n  constructor(\n    public id: string,\n    public title: string,\n    public description: string,\n    public price: number,\n    public availableFrom: Date,\n    public availableTo: Date,\n    public userId: string,\n    public location: PlaceLocation,\n    public imageDataUrl: string\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, of, Observable } from 'rxjs';\nimport { take, map, tap, delay, switchMap } from 'rxjs/operators';\n\nimport { Place } from './place.model';\nimport { AuthService } from '../auth/auth.service';\nimport { PlaceLocation } from './location.model';\nimport { environment } from 'src/environments/environment';\n\ninterface PlaceData {\n  availableFrom: string;\n  availableTo: string;\n  description: string;\n  imageUrl: string;\n  price: number;\n  title: string;\n  userId: string;\n  location: PlaceLocation;\n  imageDataUrl: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlacesService {\n  private _places = new BehaviorSubject<Place[]>([]);\n\n  get places() {\n    return this._places.asObservable();\n  }\n\n  constructor(private authService: AuthService, private http: HttpClient) {}\n\n  fetchPlaces() {\n    return this.authService.userId.pipe(switchMap(userId=>{\n      return this.http\n        .get<{ [key: string]: PlaceData }>(\n          `${environment.firebaseUrl}/places.json`\n        )\n        .pipe(\n          map(resData => {\n            const places = [];\n            for (const key in resData) {\n              if (resData.hasOwnProperty(key)) {\n                places.push(\n                  new Place(\n                    key,\n                    resData[key].title,\n                    resData[key].description,\n                    resData[key].price,\n                    new Date(resData[key].availableFrom),\n                    new Date(resData[key].availableTo),\n                    resData[key].userId,\n                    resData[key].location,\n                    resData[key].imageDataUrl\n                  )\n                );\n              }\n            }\n            return places;\n          }),\n          tap(places => {\n            this._places.next(places);\n          })\n        );\n    }));\n  }\n\n  fetchOffers() {\n    let resData;\n    return this.authService.user.pipe(switchMap(user=>{\n      return this.http\n        .get<{ [key: string]: PlaceData }>(\n          `${environment.firebaseUrl}/places.json`\n        )\n        .pipe(\n          switchMap(res=>{\n            resData=res;\n            return this.authService.checkUserIsAdmin();\n          }),\n          map(userIsAdmin => {\n            const places = [];\n            for (const key in resData) {\n              if (resData.hasOwnProperty(key) && (resData[key].userId==user.id || userIsAdmin==true)) {\n                places.push(\n                  new Place(\n                    key,\n                    resData[key].title,\n                    resData[key].description,\n                    resData[key].price,\n                    new Date(resData[key].availableFrom),\n                    new Date(resData[key].availableTo),\n                    resData[key].userId,\n                    resData[key].location,\n                    resData[key].imageDataUrl\n                  )\n                );\n              }\n            }\n            return places;\n          }),\n          tap(places => {\n            this._places.next(places);\n          })\n        );\n    }));\n  }\n\n  getPlace(id: string) {\n    return this.http\n      .get<PlaceData>(\n        `${environment.firebaseUrl}/places/${id}.json`\n      )\n      .pipe(\n        map(placeData => {\n          return new Place(\n            id,\n            placeData.title,\n            placeData.description,\n            placeData.price,\n            new Date(placeData.availableFrom),\n            new Date(placeData.availableTo),\n            placeData.userId,\n            placeData.location,\n            placeData.imageDataUrl\n          );\n        })\n      );\n  }\n\n  addPlace(\n    title: string,\n    description: string,\n    price: number,\n    dateFrom: Date,\n    dateTo: Date,\n    location: PlaceLocation,\n    imageDataURL: string\n  ) {\n    let generatedId: string;\n    let newPlace: Place;\n    return this.authService.userId.pipe(\n      take(1),\n      switchMap(userId => {\n        if (!userId) {\n          throw new Error('No user found!');\n        }\n        newPlace = new Place(\n          Math.random().toString(),\n          title,\n          description,\n          price,\n          dateFrom,\n          dateTo,\n          userId,\n          location,\n          imageDataURL\n        );\n        return this.http.post<{ name: string }>(\n          `${environment.firebaseUrl}/places.json`,\n          {\n            ...newPlace,\n            id: null\n          }\n        );\n      }),\n      switchMap(resData => {\n        generatedId = resData.name;\n        return this.places;\n      }),\n      take(1),\n      tap(places => {\n        newPlace.id = generatedId;\n        this._places.next(places.concat(newPlace));\n      })\n    );\n  }\n\n  deletePlace(placeId: string) {\n    return this.http.delete(\n      `${environment.firebaseUrl}/places/${placeId}.json`\n    );\n  }\n\n  updatePlace(place: Place) {\n    let updatedPlaces: Place[];\n    return this.places.pipe(\n      take(1),\n      switchMap(places => {\n        if (!places || places.length <= 0) {\n          return this.fetchPlaces();\n        } else {\n          return of(places);\n        }\n      }),\n      switchMap(places => {\n        const updatedPlaceIndex = places.findIndex(pl => pl.id === place.id);\n        updatedPlaces = [...places];\n        updatedPlaces[updatedPlaceIndex] = place;\n        return this.http.put(\n          `${environment.firebaseUrl}/places/${place.id}.json`,\n          { ...updatedPlaces[updatedPlaceIndex], id: null }\n        );\n      }),\n      tap(() => {\n        this._places.next(updatedPlaces);\n      })\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}