{"version":3,"sources":["webpack:///src/app/auth/auth.page.html","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/auth.page.scss","webpack:///src/app/auth/auth.page.ts"],"names":["routes","path","component","AuthPageModule","imports","forChild","declarations","AuthPage","authService","router","loadingCtrl","alertCtrl","isLoading","isLogin","header","message","create","buttons","then","ctrl","present","email","password","displayName","keyboardClose","loadingEl","console","log","authObs","login","signup","subscribe","resData","dismiss","navigateByUrl","showAlert","error","code","form","valid","value","username","onLogin","selector","template"],"mappings":"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","file":"auth-auth-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{ isLogin ? 'Login' : 'Signup' }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\" *ngIf='isLogin' id=signIn>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-list>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">E-Mail</ion-label>\\n              <ion-input\\n                type=\\\"email\\\"\\n                ngModel\\n                name=\\\"email\\\"\\n                required\\n                email\\n                #emailCtrl=\\\"ngModel\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item\\n              *ngIf=\\\"!emailCtrl.valid && emailCtrl.touched\\\"\\n              lines=\\\"none\\\"\\n            >\\n              <ion-label>\\n                Should be a valid email address.\\n              </ion-label>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Password</ion-label>\\n              <ion-input\\n                type=\\\"password\\\"\\n                ngModel\\n                name=\\\"password\\\"\\n                required\\n                minlength=\\\"6\\\"\\n                #passwordCtrl=\\\"ngModel\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item\\n              *ngIf=\\\"!passwordCtrl.valid && passwordCtrl.touched\\\"\\n              lines=\\\"none\\\"\\n            >\\n              <ion-label>\\n                Should at least be 6 characters long.\\n              </ion-label>\\n            </ion-item>\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-button \\n          type=\\\"button\\\" \\n          color=\\\"primary\\\" \\n          fill=\\\"clear\\\" \\n          expand=\\\"block\\\"\\n          (click)=\\\"onSwitchAuthMode()\\\">\\n            Switch to {{ !isLogin ? 'Login' : 'Signup' }}\\n          </ion-button>\\n          <ion-button\\n            type=\\\"submit\\\"\\n            color=\\\"primary\\\"\\n            expand=\\\"block\\\"\\n            [disabled]=\\\"!f.valid\\\"\\n          >\\n          Login \\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\" *ngIf='!isLogin' id='signup'>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-list>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Username</ion-label>\\n              <ion-input\\n                type=\\\"Username\\\"\\n                ngModel\\n                name=\\\"username\\\"\\n                required\\n                username\\n                #usernameCtrl=\\\"ngModel\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item\\n              *ngIf=\\\"!usernameCtrl.valid && usernameCtrl.touched\\\"\\n              lines=\\\"none\\\"\\n            >\\n              <ion-label>\\n                Should be a valid username.\\n              </ion-label>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">E-Mail</ion-label>\\n              <ion-input\\n                type=\\\"email\\\"\\n                ngModel\\n                name=\\\"email\\\"\\n                required\\n                email\\n                #emailCtrl=\\\"ngModel\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item\\n              *ngIf=\\\"!emailCtrl.valid && emailCtrl.touched\\\"\\n              lines=\\\"none\\\"\\n            >\\n              <ion-label>\\n                Should be a valid email address.\\n              </ion-label>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Password</ion-label>\\n              <ion-input\\n                type=\\\"password\\\"\\n                ngModel\\n                name=\\\"password\\\"\\n                required\\n                minlength=\\\"6\\\"\\n                #passwordCtrl=\\\"ngModel\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item\\n              *ngIf=\\\"!passwordCtrl.valid && passwordCtrl.touched\\\"\\n              lines=\\\"none\\\"\\n            >\\n              <ion-label>\\n                Should at least be 6 characters long.\\n              </ion-label>\\n            </ion-item>\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-button \\n          type=\\\"button\\\" \\n          color=\\\"primary\\\" \\n          fill=\\\"clear\\\" \\n          expand=\\\"block\\\"\\n          (click)=\\\"onSwitchAuthMode()\\\">\\n            Switch to Login\\n          </ion-button>\\n          <ion-button\\n            type=\\\"submit\\\"\\n            color=\\\"primary\\\"\\n            expand=\\\"block\\\"\\n            [disabled]=\\\"!f.valid\\\"\\n          >\\n            Signup\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthPage } from './auth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AuthPage]\n})\nexport class AuthPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvYXV0aC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { LoadingController, AlertController } from '@ionic/angular';\n\nimport { AuthService, AuthResponseData } from './auth.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.page.html',\n  styleUrls: ['./auth.page.scss']\n})\nexport class AuthPage implements OnInit {\n  @ViewChild('f', { static: false }) form: NgForm;\n  // @ViewChild('f2', { static: false }) form2: NgForm;\n  isLoading = false;\n  isLogin = true;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private loadingCtrl: LoadingController,\n    private alertCtrl: AlertController\n  ) {\n    this.isLogin = true;\n  }\n\n  ngOnInit() {}\n  private showAlert(header:string, message: string) {\n    this.alertCtrl.create({header: header, message: message, buttons: ['okay']})\n    .then((ctrl) => {\n      ctrl.present();\n    });\n  }\n\n  \n  onLogin(email: string, password: string, displayName?: string) {\n    this.isLoading = true;\n    this.loadingCtrl\n      .create({ keyboardClose: true, message: 'Logging in...' })\n      .then(loadingEl => {\n        loadingEl.present();\n        console.log(this.isLogin);\n        let authObs: Observable<AuthResponseData>;\n        if (this.isLogin) {\n          authObs = this.authService.login(email, password);\n          \n        } else {\n          authObs = this.authService.signup(email, password, displayName);\n        }\n        authObs.subscribe((resData) => {\n          this.isLoading = false;\n          loadingEl.dismiss();\n          if (this.isLogin) {\n            this.router.navigateByUrl('/places/tabs/discover');\n          } else {\n            let header = 'Sign up Successful';\n            let message = 'Back to login page';\n            this.showAlert(header, message);\n            this.isLogin = !this.isLogin;\n          }\n        }, error => {\n          let header = \"Authentication failed\";\n          loadingEl.dismiss();\n          const code = error.error.error.message;\n          let message = 'could not sign up, please try again';\n          console.log(code);\n          if (code === 'EMAIL_EXISTS') {\n            message = 'this email already exists';\n          }\n          if (code === 'EMAIL_NOT_FOUND') {\n            message = 'this email has not been registered';\n          }\n          if (code === 'INVALID_PASSWORD') {\n            message = 'this password is invalid';\n          }\n          this.showAlert(header, message);\n        });\n      });\n  }\n\n  onSwitchAuthMode() {\n    this.isLogin = !this.isLogin;\n  }\n\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n    const email = form.value.email;\n    const password = form.value.password;\n    if(!this.isLogin){\n      const displayName=form.value.username;\n      this.onLogin(email, password, displayName)\n    }else{\n      this.onLogin(email, password);\n    }\n    \n  }\n}\n"]}