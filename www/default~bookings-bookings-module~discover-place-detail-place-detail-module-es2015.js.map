{"version":3,"sources":["./src/app/bookings/booking.model.ts","./src/app/bookings/booking.service.ts","./src/app/places/place.model.ts","./src/app/places/places.service.ts","./src/environments/environment.prod.ts"],"names":[],"mappings":"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","file":"default~bookings-bookings-module~discover-place-detail-place-detail-module-es2015.js","sourcesContent":["export class Booking {\n  constructor(\n    public id: string,\n    public placeId: string,\n    public userEmail: string,\n    public placeTitle: string,\n    public imageDataUrl: string,\n    public firstName: string,\n    public lastName: string,\n    public guestNumber: number,\n    public bookedFrom: Date,\n    public bookedTo: Date\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { take, tap, delay, switchMap, map } from 'rxjs/operators';\n\nimport { Booking } from './booking.model';\nimport { AuthService } from '../auth/auth.service';\nimport { environment } from 'src/environments/environment.prod';\n\ninterface BookingData {\n  bookedFrom: string;\n  bookedTo: string;\n  firstName: string;\n  guestNumber: number;\n  lastName: string;\n  placeId: string;\n  placeImage: string;\n  placeTitle: string;\n  userEmail: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class BookingService {\n  private _bookings = new BehaviorSubject<Booking[]>([]);\n\n  get bookings() {\n    return this._bookings.asObservable();\n  }\n\n  constructor(private authService: AuthService, private http: HttpClient) {}\n\n  addBooking(\n    placeId: string,\n    placeTitle: string,\n    placeImage: string,\n    firstName: string,\n    lastName: string,\n    guestNumber: number,\n    dateFrom: Date,\n    dateTo: Date\n  ) {\n    let generatedId: string;\n    let newBooking;\n    return this.authService.user.pipe(take(1), switchMap(user => {\n      console.log(dateFrom);\n      console.log(dateTo);\n      newBooking = new Booking(\n        Math.random().toString(),\n        placeId,\n        user.email,\n        placeTitle,\n        placeImage,\n        firstName,\n        lastName,\n        guestNumber,\n        dateFrom,\n        dateTo\n      );\n      console.log(newBooking);\n      return this.http\n        .post<{ name: string }>(\n          `${environment.firebaseUrl}/bookings.json`,\n          { ...newBooking, id: null }\n        );\n    }),\n        switchMap(resData => {\n          generatedId = resData.name;\n          return this.bookings;\n        }),\n        take(1),\n        tap(bookings => {\n          newBooking.id = generatedId;\n          this._bookings.next(bookings.concat(newBooking));\n        })\n      );\n  }\n\n  updateBooking(\n    id: string,\n    placeId: string,\n    placeTitle: string,\n    placeImage: string,\n    firstName: string,\n    lastName: string,\n    guestNumber: number,\n    dateFrom: Date,\n    dateTo: Date\n  ) {\n    let generatedId: string;\n    let newBooking;\n    return this.authService.user.pipe(take(1), switchMap(user => {\n      console.log(dateFrom);\n      console.log(dateTo);\n      newBooking = new Booking(\n        id,\n        placeId,\n        user.email,\n        placeTitle,\n        placeImage,\n        firstName,\n        lastName,\n        guestNumber,\n        dateFrom,\n        dateTo\n      );\n      console.log(newBooking);\n      return this.http\n        .put<{ name: string }>(\n          `${environment.firebaseUrl}/bookings/${id}.json`,\n          { ...newBooking, id: null }\n        );\n    }),\n        switchMap(resData => {\n          generatedId = resData.name;\n          return this.bookings;\n        }),\n        take(1),\n        tap(bookings => {\n          newBooking.id = generatedId;\n          bookings=bookings.filter(booking=>booking.id!=id);\n          this._bookings.next(bookings.concat(newBooking));\n        })\n      );\n  }\n\n  cancelBooking(bookingId: string) {\n    return this.http\n      .delete(\n        `${environment.firebaseUrl}/bookings/${bookingId}.json`\n      )\n      .pipe(\n        switchMap(() => {\n          return this.bookings;\n        }),\n        take(1),\n        tap(bookings => {\n          this._bookings.next(bookings.filter(b => b.id !== bookingId));\n        })\n      );\n  }\n\n  fetchBookings() {\n    let bookingData;\n    return this.authService.user.pipe(switchMap(user=>{\n      return this.http\n      .get<{ [key: string]: BookingData }>(\n        `${environment.firebaseUrl}/bookings.json`\n      )\n      .pipe(\n        switchMap(res=>{\n          bookingData=res;\n          return this.authService.checkUserIsAdmin();\n        }),\n        map(userIsAdmin => {\n          const bookings = [];\n          for (const key in bookingData) {\n            if (bookingData.hasOwnProperty(key)) {\n              if(bookingData[key].userEmail == user.email || userIsAdmin == true){\n                bookings.push(\n                  new Booking(\n                    key,\n                    bookingData[key].placeId,\n                    bookingData[key].userEmail,\n                    bookingData[key].placeTitle,\n                    bookingData[key].placeImage,\n                    bookingData[key].firstName,\n                    bookingData[key].lastName,\n                    bookingData[key].guestNumber,\n                    new Date(bookingData[key].bookedFrom),\n                    new Date(bookingData[key].bookedTo)\n                  )\n                );\n              }\n              }\n          }\n          return bookings;\n        }),\n        tap(bookings => {\n          this._bookings.next(bookings);\n        })\n      );\n    }));\n    \n  }\n}\n","import { PlaceLocation } from './location.model';\n\nexport class Place {\n  constructor(\n    public id: string,\n    public title: string,\n    public description: string,\n    public price: number,\n    public availableFrom: Date,\n    public availableTo: Date,\n    public userId: string,\n    public location: PlaceLocation,\n    public imageDataUrl: string\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, of, Observable } from 'rxjs';\nimport { take, map, tap, delay, switchMap } from 'rxjs/operators';\n\nimport { Place } from './place.model';\nimport { AuthService } from '../auth/auth.service';\nimport { PlaceLocation } from './location.model';\nimport { environment } from 'src/environments/environment';\n\ninterface PlaceData {\n  availableFrom: string;\n  availableTo: string;\n  description: string;\n  imageUrl: string;\n  price: number;\n  title: string;\n  userId: string;\n  location: PlaceLocation;\n  imageDataUrl: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlacesService {\n  private _places = new BehaviorSubject<Place[]>([]);\n\n  get places() {\n    return this._places.asObservable();\n  }\n\n  constructor(private authService: AuthService, private http: HttpClient) {}\n\n  fetchPlaces() {\n    return this.authService.userId.pipe(switchMap(userId=>{\n      return this.http\n        .get<{ [key: string]: PlaceData }>(\n          `${environment.firebaseUrl}/places.json`\n        )\n        .pipe(\n          map(resData => {\n            const places = [];\n            for (const key in resData) {\n              if (resData.hasOwnProperty(key)) {\n                places.push(\n                  new Place(\n                    key,\n                    resData[key].title,\n                    resData[key].description,\n                    resData[key].price,\n                    new Date(resData[key].availableFrom),\n                    new Date(resData[key].availableTo),\n                    resData[key].userId,\n                    resData[key].location,\n                    resData[key].imageDataUrl\n                  )\n                );\n              }\n            }\n            return places;\n          }),\n          tap(places => {\n            this._places.next(places);\n          })\n        );\n    }));\n  }\n\n  fetchOffers() {\n    let resData;\n    return this.authService.user.pipe(switchMap(user=>{\n      return this.http\n        .get<{ [key: string]: PlaceData }>(\n          `${environment.firebaseUrl}/places.json`\n        )\n        .pipe(\n          switchMap(res=>{\n            resData=res;\n            return this.authService.checkUserIsAdmin();\n          }),\n          map(userIsAdmin => {\n            const places = [];\n            for (const key in resData) {\n              if (resData.hasOwnProperty(key) && (resData[key].userId==user.id || userIsAdmin==true)) {\n                places.push(\n                  new Place(\n                    key,\n                    resData[key].title,\n                    resData[key].description,\n                    resData[key].price,\n                    new Date(resData[key].availableFrom),\n                    new Date(resData[key].availableTo),\n                    resData[key].userId,\n                    resData[key].location,\n                    resData[key].imageDataUrl\n                  )\n                );\n              }\n            }\n            return places;\n          }),\n          tap(places => {\n            this._places.next(places);\n          })\n        );\n    }));\n  }\n\n  getPlace(id: string) {\n    return this.http\n      .get<PlaceData>(\n        `${environment.firebaseUrl}/places/${id}.json`\n      )\n      .pipe(\n        map(placeData => {\n          return new Place(\n            id,\n            placeData.title,\n            placeData.description,\n            placeData.price,\n            new Date(placeData.availableFrom),\n            new Date(placeData.availableTo),\n            placeData.userId,\n            placeData.location,\n            placeData.imageDataUrl\n          );\n        })\n      );\n  }\n\n  addPlace(\n    title: string,\n    description: string,\n    price: number,\n    dateFrom: Date,\n    dateTo: Date,\n    location: PlaceLocation,\n    imageDataURL: string\n  ) {\n    let generatedId: string;\n    let newPlace: Place;\n    return this.authService.userId.pipe(\n      take(1),\n      switchMap(userId => {\n        if (!userId) {\n          throw new Error('No user found!');\n        }\n        newPlace = new Place(\n          Math.random().toString(),\n          title,\n          description,\n          price,\n          dateFrom,\n          dateTo,\n          userId,\n          location,\n          imageDataURL\n        );\n        return this.http.post<{ name: string }>(\n          `${environment.firebaseUrl}/places.json`,\n          {\n            ...newPlace,\n            id: null\n          }\n        );\n      }),\n      switchMap(resData => {\n        generatedId = resData.name;\n        return this.places;\n      }),\n      take(1),\n      tap(places => {\n        newPlace.id = generatedId;\n        this._places.next(places.concat(newPlace));\n      })\n    );\n  }\n\n  deletePlace(placeId: string) {\n    return this.http.delete(\n      `${environment.firebaseUrl}/places/${placeId}.json`\n    );\n  }\n\n  updatePlace(place: Place) {\n    let updatedPlaces: Place[];\n    return this.places.pipe(\n      take(1),\n      switchMap(places => {\n        if (!places || places.length <= 0) {\n          return this.fetchPlaces();\n        } else {\n          return of(places);\n        }\n      }),\n      switchMap(places => {\n        const updatedPlaceIndex = places.findIndex(pl => pl.id === place.id);\n        updatedPlaces = [...places];\n        updatedPlaces[updatedPlaceIndex] = place;\n        return this.http.put(\n          `${environment.firebaseUrl}/places/${place.id}.json`,\n          { ...updatedPlaces[updatedPlaceIndex], id: null }\n        );\n      }),\n      tap(() => {\n        this._places.next(updatedPlaces);\n      })\n    );\n  }\n}\n","export const environment = {\n  production: true,\n  googleMapsAPIKey: 'AIzaSyDMqXL534Jdd0JTcpdJRQNr1gFpjpR_pes',\n  firebaseAPIKey: 'AIzaSyBisUq3FML1Kazn-H-JVJ46y_iC9ZPprMI',\n  firebaseUrl: 'https://teak-mantis-271722.firebaseio.com/'\n};"],"sourceRoot":"webpack:///"}